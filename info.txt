#steps

ember init

create jsconfig.json

npm stat | ember s | ng serve  -> for rum the application

#get css on -> bootstrapcdn.com

      # css and font awesome

rename app.css to  app.scss

ember install ember-cli-sass

ember-cli-build.js

    module.exports = function (defaults) {
    let app = new EmberApp(defaults, {
      // Add options here
      sassOptions:{
        extension: "scss",
      }
    });

# ember g route clothes  -> to create a route called clothes

clothes.hbs -> is like the html page

ember g route clothes/t-shit-test.js -> to create a route insade other router

ember g route clothes/index  -> to create a index page to a route

# define a route dynamic

    ember g route item

    this.route('item', { path: '/item/:item_id' });

    in item.js

        export default class ItemRoute extends Route {
          model(params) {
            const { item_id } = params;

            return item_id;
          }
        }


# define a not found page

  ember g route not-found

  this.route('not-found', {path: '/*path'});

# To remove routes

  ember destroy route

________________

ember g route index && ember g route cart

#To create a controller

  ember g controller cart

# to create a component

    ember g component general-container

    ember g component product

# create componentes inside folders and call then

    ember g component product/image
    <Product::Image/>

# to create a component class to our component

    ember g component-class product


# define a actios

        mport Component from '@glimmer/component';

      import { tracked } from '@glimmer/tracking';
      import { action } from '@ember/object';

      export default class ProductComponent extends Component {
        @tracked number = 0;

        @action
        addNumber() {
          this.number = this.number + 1;
        }
      }


      <h1>Number: {{ this.number }}</h1>
      <button {{on "click" this.addNumber}}>Add</button>


#to reference to a object from father you need to put "@" example @number



